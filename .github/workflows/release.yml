name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'

      - name: Set version in shell script
        run: |
          sed -i "s/overseerVersion='.*'/overseerVersion='${{ github.event.inputs.release_version }}'/" scripts/server-installer.sh

      - name: Build Angular project
        run: |
          npm version ${{ github.event.inputs.release_version }} --no-git-tag-version
          sed -i 's/appVersion.*,/appVersion: "${{ github.event.inputs.release_version }}",/' src/environments/versions.ts   
          npm ci
          npm run build
          npm run build:remote
        working-directory: src/Overseer.Client

      - name: Build .NET project
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore /p:Version=${{ github.event.inputs.release_version }}
        working-directory: src/Overseer.Server

      - name: Copy Angular project build to output
        run: |
          cp -r ./src/Overseer.Client/dist/overseer.client.remote/* ./src/Overseer.Server/bin/Release/net8.0

      - name: Create Server Build Artifacts
        run: |
          zip -r overseer_server.zip *
        working-directory: src/Overseer.Server/bin/Release/net8.0

      - name: Create WebApp Build Artifacts
        run: |
          zip -r overseer_webapp.zip *
        working-directory: src/Overseer.Client/dist/overseer.client.local

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Release ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset - Server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/Overseer.Server/bin/Release/net8.0/overseer_server.zip
          asset_name: overseer_server_${{ github.event.inputs.release_version }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - WebApp
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cd src/Overseer.Client/dist/overseer.client.local/overseer_webapp.zip
          asset_name: overseer_webapp_${{ github.event.inputs.release_version }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Server Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: scripts/server-installer.sh
          asset_name: install.sh
          asset_content_type: application/x-sh
